{
  "model": "claude-3-sonnet-20240229",
  "max_tokens": 4000,
  "messages": [
    {
      "role": "user",
      "content": "以下のHTML/CSS/JSサイトを改善してください。要望: マウスカーソルを魚がおいかけるデザインにして\n\nHTML:\n<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>🎉 Claude Code テスト！ドンキ風サイト 🎊</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <div class="container">
        <header class="header">
            <div class="neon-border">
                <h1 class="main-title">
                    🌟 CLAUDE CODE 🌟<br>
                    <span class="subtitle">テストサイト！</span>
                </h1>
            </div>
        </header>

        <div class="promotion-box">
            <div class="flash-text">🔥 激安！Claude Codeでコーディング革命！ 🔥</div>
            <div class="price-tag">
                <span class="old-price">従来のコーディング: ¥999,999</span>
                <span class="new-price">Claude Code: 無料！</span>
            </div>
        </div>

        <div class="features-grid">
            <div class="feature-card yellow">
                <h3>⚡ 超高速開発</h3>
                <p>AIがコードを書いてくれる！<br>開発時間90%短縮！</p>
                <div class="stamp">激安</div>
            </div>
            
            <div class="feature-card pink">
                <h3>🎯 バグ撲滅</h3>
                <p>Claude Codeがバグを発見！<br>品質向上間違いなし！</p>
                <div class="stamp">人気</div>
            </div>
            
            <div class="feature-card blue">
                <h3>🚀 即座にテスト</h3>
                <p>テストコードも自動生成！<br>今すぐ試してみよう！</p>
                <div class="stamp">限定</div>
            </div>
        </div>

        <div class="call-to-action">
            <button class="donki-button" onclick="flashMessage()">
                今すぐClaude Codeを試す！🎊
            </button>
        </div>

        <div class="rolling-text">
            <div class="text-content">
                💫 Claude Code最高！ 💫 プログラミングが楽しくなる！ 💫 AIと一緒にコーディング！ 💫 
            </div>
        </div>

        <footer class="footer">
            <p>🎪 このサイトはClaude Codeで作成されました！ 🎪</p>
            <div class="sparkles">✨✨✨✨✨</div>
        </footer>
    </div>

    <div id="flash-message" class="flash-message">
        🎉 Claude Codeでコーディングライフが変わる！ 🎉
    </div>

    <script src="script.js"></script>
</body>
</html>\n\nCSS:\n/* ドン・キホーテ風の派手なデザイン */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Arial Black', Arial, sans-serif;
    background: linear-gradient(45deg, #ff0080, #0080ff, #ff8000, #8000ff);
    background-size: 400% 400%;
    animation: gradientShift 3s ease infinite;
    color: #fff;
    overflow-x: hidden;
}

@keyframes gradientShift {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
}

.container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 20px;
}

/* ヘッダー */
.header {
    text-align: center;
    margin-bottom: 30px;
    animation: bounce 2s infinite;
}

@keyframes bounce {
    0%, 20%, 50%, 80%, 100% { transform: translateY(0); }
    40% { transform: translateY(-10px); }
    60% { transform: translateY(-5px); }
}

.neon-border {
    border: 5px solid #ffff00;
    border-radius: 20px;
    padding: 20px;
    background: rgba(0, 0, 0, 0.7);
    box-shadow: 
        0 0 20px #ffff00,
        inset 0 0 20px rgba(255, 255, 0, 0.3);
    animation: neonPulse 1.5s ease-in-out infinite alternate;
}

@keyframes neonPulse {
    from { box-shadow: 0 0 20px #ffff00, inset 0 0 20px rgba(255, 255, 0, 0.3); }
    to { box-shadow: 0 0 40px #ffff00, inset 0 0 40px rgba(255, 255, 0, 0.6); }
}

.main-title {
    font-size: 3.5rem;
    font-weight: 900;
    text-shadow: 
        3px 3px 0 #000,
        6px 6px 0 #ff0080;
    margin-bottom: 10px;
}

.subtitle {
    font-size: 2rem;
    color: #ffff00;
    text-shadow: 2px 2px 0 #000;
}

/* プロモーションボックス */
.promotion-box {
    background: linear-gradient(45deg, #ff0000, #ff8000);
    border: 5px solid #ffff00;
    border-radius: 15px;
    padding: 20px;
    margin: 20px 0;
    text-align: center;
    animation: shake 0.5s infinite;
}

@keyframes shake {
    0% { transform: translate(1px, 1px) rotate(0deg); }
    10% { transform: translate(-1px, -2px) rotate(-1deg); }
    20% { transform: translate(-3px, 0px) rotate(1deg); }
    30% { transform: translate(3px, 2px) rotate(0deg); }
    40% { transform: translate(1px, -1px) rotate(1deg); }
    50% { transform: translate(-1px, 2px) rotate(-1deg); }
    60% { transform: translate(-3px, 1px) rotate(0deg); }
    70% { transform: translate(3px, 1px) rotate(-1deg); }
    80% { transform: translate(-1px, -1px) rotate(1deg); }
    90% { transform: translate(1px, 2px) rotate(0deg); }
    100% { transform: translate(1px, -2px) rotate(-1deg); }
}

.flash-text {
    font-size: 2rem;
    font-weight: 900;
    text-shadow: 3px 3px 0 #000;
    animation: flash 1s infinite;
}

@keyframes flash {
    0%, 50%, 100% { opacity: 1; }
    25%, 75% { opacity: 0.5; }
}

.price-tag {
    margin-top: 10px;
}

.old-price {
    text-decoration: line-through;
    color: #ffcccc;
    font-size: 1.2rem;
    margin-right: 20px;
}

.new-price {
    font-size: 2.5rem;
    font-weight: 900;
    color: #ffff00;
    text-shadow: 3px 3px 0 #000;
}

/* フィーチャーグリッド */
.features-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 20px;
    margin: 30px 0;
}

.feature-card {
    border: 5px solid #000;
    border-radius: 15px;
    padding: 20px;
    text-align: center;
    position: relative;
    animation: wiggle 3s ease-in-out infinite;
    transform-origin: center;
}

@keyframes wiggle {
    0%, 100% { transform: rotate(0deg); }
    25% { transform: rotate(1deg); }
    75% { transform: rotate(-1deg); }
}

.feature-card.yellow {
    background: linear-gradient(45deg, #ffff00, #ff8000);
    color: #000;
}

.feature-card.pink {
    background: linear-gradient(45deg, #ff0080, #ff8080);
    color: #fff;
}

.feature-card.blue {
    background: linear-gradient(45deg, #0080ff, #8080ff);
    color: #fff;
}

.feature-card h3 {
    font-size: 1.8rem;
    margin-bottom: 15px;
    text-shadow: 2px 2px 0 rgba(0,0,0,0.5);
}

.feature-card p {
    font-size: 1.2rem;
    font-weight: bold;
}

.stamp {
    position: absolute;
    top: -10px;
    right: -10px;
    background: #ff0000;
    color: #fff;
    padding: 10px 15px;
    border-radius: 50%;
    font-size: 1rem;
    font-weight: 900;
    border: 3px solid #ffff00;
    transform: rotate(15deg);
    animation: stampBounce 2s infinite;
}

@keyframes stampBounce {
    0%, 100% { transform: rotate(15deg) scale(1); }
    50% { transform: rotate(15deg) scale(1.1); }
}

/* コールトゥアクション */
.call-to-action {
    text-align: center;
    margin: 40px 0;
}

.donki-button {
    background: linear-gradient(45deg, #ff0000, #ff8000, #ffff00);
    border: 5px solid #000;
    border-radius: 20px;
    padding: 20px 40px;
    font-size: 2rem;
    font-weight: 900;
    color: #000;
    cursor: pointer;
    text-shadow: 1px 1px 0 #fff;
    animation: buttonPulse 1s infinite;
    transition: all 0.3s ease;
}

@keyframes buttonPulse {
    0% { transform: scale(1); }
    50% { transform: scale(1.05); }
    100% { transform: scale(1); }
}

.donki-button:hover {
    transform: scale(1.1);
    animation: shake 0.2s infinite;
}

/* ローリングテキスト */
.rolling-text {
    background: #000;
    border: 3px solid #ffff00;
    overflow: hidden;
    white-space: nowrap;
    margin: 30px 0;
    padding: 10px 0;
}

.text-content {
    display: inline-block;
    animation: scroll 10s linear infinite;
    font-size: 1.5rem;
    font-weight: bold;
    color: #ffff00;
}

@keyframes scroll {
    0% { transform: translate3d(100%, 0, 0); }
    100% { transform: translate3d(-100%, 0, 0); }
}

/* フッター */
.footer {
    text-align: center;
    margin-top: 40px;
    padding: 20px;
    background: rgba(0, 0, 0, 0.8);
    border-radius: 15px;
    border: 3px solid #ff0080;
}

.footer p {
    font-size: 1.2rem;
    font-weight: bold;
    margin-bottom: 10px;
}

.sparkles {
    font-size: 2rem;
    animation: sparkle 1.5s ease-in-out infinite;
}

@keyframes sparkle {
    0%, 100% { opacity: 1; }
    50% { opacity: 0.3; }
}

/* フラッシュメッセージ */
.flash-message {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: linear-gradient(45deg, #ff0000, #ffff00);
    color: #000;
    padding: 30px;
    border: 5px solid #000;
    border-radius: 20px;
    font-size: 2rem;
    font-weight: 900;
    text-align: center;
    z-index: 1000;
    opacity: 0;
    pointer-events: none;
    transition: opacity 0.3s ease;
}

.flash-message.show {
    opacity: 1;
    animation: flashMessageBounce 0.5s ease;
}

@keyframes flashMessageBounce {
    0% { transform: translate(-50%, -50%) scale(0.5); }
    100% { transform: translate(-50%, -50%) scale(1); }
}

/* レスポンシブ対応 */
@media (max-width: 768px) {
    .main-title {
        font-size: 2.5rem;
    }
    
    .subtitle {
        font-size: 1.5rem;
    }
    
    .flash-text {
        font-size: 1.5rem;
    }
    
    .donki-button {
        font-size: 1.5rem;
        padding: 15px 30px;
    }
    
    .features-grid {
        grid-template-columns: 1fr;
    }
}\n\nJS:\n// ドン・キホーテ風の派手なJavaScript効果

// ページ読み込み時の初期化
document.addEventListener('DOMContentLoaded', function() {
    initializeEffects();
    createFloatingEmojis();
    addRandomColorChanges();
});

// フラッシュメッセージを表示する関数
function flashMessage() {
    const flashMsg = document.getElementById('flash-message');
    flashMsg.classList.add('show');
    
    // ランダムな効果音テキストを追加
    const sounds = ['🎉 BOING!', '💥 POW!', '✨ BLING!', '🎊 TADA!', '🚀 ZOOM!'];
    const randomSound = sounds[Math.floor(Math.random() * sounds.length)];
    
    // 一時的にテキストを変更
    const originalText = flashMsg.textContent;
    flashMsg.textContent = randomSound;
    
    setTimeout(() => {
        flashMsg.textContent = originalText;
    }, 500);
    
    // 2秒後に非表示
    setTimeout(() => {
        flashMsg.classList.remove('show');
    }, 2000);
    
    // ページ全体を一瞬振動させる
    document.body.style.animation = 'shake 0.5s';
    setTimeout(() => {
        document.body.style.animation = '';
    }, 500);
}

// 初期化関数
function initializeEffects() {
    // ランダムな位置に星を追加
    createStars();
    
    // フィーチャーカードにホバー効果を追加
    addCardHoverEffects();
    
    // 価格タグにランダムな効果を追加
    addPriceEffects();
}

// 浮遊する絵文字を作成
function createFloatingEmojis() {
    const emojis = ['⭐', '🌟', '✨', '💫', '🎊', '🎉', '🚀', '💥'];
    
    setInterval(() => {
        const emoji = document.createElement('div');
        emoji.style.position = 'fixed';
        emoji.style.left = Math.random() * 100 + 'vw';
        emoji.style.top = '100vh';
        emoji.style.fontSize = (Math.random() * 30 + 20) + 'px';
        emoji.style.zIndex = '999';
        emoji.style.pointerEvents = 'none';
        emoji.style.animation = 'floatUp 4s linear forwards';
        emoji.textContent = emojis[Math.floor(Math.random() * emojis.length)];
        
        document.body.appendChild(emoji);
        
        // 4秒後に削除
        setTimeout(() => {
            if (emoji.parentNode) {
                emoji.parentNode.removeChild(emoji);
            }
        }, 4000);
    }, 2000);
}

// 浮遊アニメーションのCSSを動的に追加
const style = document.createElement('style');
style.textContent = `
    @keyframes floatUp {
        from {
            transform: translateY(0) rotate(0deg);
            opacity: 1;
        }
        to {
            transform: translateY(-100vh) rotate(360deg);
            opacity: 0;
        }
    }
    
    @keyframes colorShift {
        0% { filter: hue-rotate(0deg); }
        100% { filter: hue-rotate(360deg); }
    }
    
    @keyframes randomBounce {
        0%, 100% { transform: translateY(0px); }
        50% { transform: translateY(-20px); }
    }
`;
document.head.appendChild(style);

// 星を作成
function createStars() {
    for (let i = 0; i < 20; i++) {
        const star = document.createElement('div');
        star.style.position = 'fixed';
        star.style.left = Math.random() * 100 + 'vw';
        star.style.top = Math.random() * 100 + 'vh';
        star.style.width = (Math.random() * 4 + 2) + 'px';
        star.style.height = star.style.width;
        star.style.backgroundColor = '#ffff00';
        star.style.borderRadius = '50%';
        star.style.zIndex = '1';
        star.style.pointerEvents = 'none';
        star.style.animation = `sparkle ${Math.random() * 2 + 1}s ease-in-out infinite`;
        
        document.body.appendChild(star);
    }
}

// カードのホバー効果
function addCardHoverEffects() {
    const cards = document.querySelectorAll('.feature-card');
    
    cards.forEach(card => {
        card.addEventListener('mouseenter', function() {
            this.style.animation = 'randomBounce 0.6s ease-in-out infinite';
            this.style.transform = 'scale(1.05)';
        });
        
        card.addEventListener('mouseleave', function() {
            this.style.animation = 'wiggle 3s ease-in-out infinite';
            this.style.transform = 'scale(1)';
        });
        
        // ランダムなクリック効果
        card.addEventListener('click', function() {
            const colors = ['#ff0080', '#0080ff', '#ff8000', '#8000ff', '#00ff80'];
            const randomColor = colors[Math.random() * colors.length | 0];
            
            this.style.boxShadow = `0 0 30px ${randomColor}`;
            this.style.transform = 'scale(1.1) rotate(5deg)';
            
            setTimeout(() => {
                this.style.boxShadow = '';
                this.style.transform = 'scale(1) rotate(0deg)';
            }, 300);
        });
    });
}

// 価格エフェクト
function addPriceEffects() {
    const newPrice = document.querySelector('.new-price');
    
    if (newPrice) {
        setInterval(() => {
            newPrice.style.animation = 'colorShift 2s linear infinite';
        }, 3000);
    }
}

// ランダムな色変更
function addRandomColorChanges() {
    const elements = document.querySelectorAll('.neon-border, .promotion-box');
    
    setInterval(() => {
        elements.forEach(element => {
            const hue = Math.random() * 360;
            element.style.filter = `hue-rotate(${hue}deg)`;
        });
    }, 5000);
}

// キーボードイベント（隠し機能）
document.addEventListener('keydown', function(event) {
    // スペースキーで爆発効果
    if (event.code === 'Space') {
        event.preventDefault();
        createExplosion();
    }
    
    // Enterキーでレインボー効果
    if (event.code === 'Enter') {
        event.preventDefault();
        document.body.style.animation = 'colorShift 3s linear';
        setTimeout(() => {
            document.body.style.animation = '';
        }, 3000);
    }
});

// 爆発効果
function createExplosion() {
    const colors = ['#ff0080', '#0080ff', '#ff8000', '#ffff00', '#8000ff'];
    
    for (let i = 0; i < 15; i++) {
        const particle = document.createElement('div');
        particle.style.position = 'fixed';
        particle.style.left = '50%';
        particle.style.top = '50%';
        particle.style.width = '10px';
        particle.style.height = '10px';
        particle.style.backgroundColor = colors[Math.random() * colors.length | 0];
        particle.style.borderRadius = '50%';
        particle.style.zIndex = '9999';
        particle.style.pointerEvents = 'none';
        
        const angle = (i / 15) * Math.PI * 2;
        const velocity = Math.random() * 200 + 100;
        const vx = Math.cos(angle) * velocity;
        const vy = Math.sin(angle) * velocity;
        
        document.body.appendChild(particle);
        
        let x = 0, y = 0;
        const animate = () => {
            x += vx * 0.02;
            y += vy * 0.02;
            particle.style.transform = `translate(${x}px, ${y}px)`;
            particle.style.opacity = Math.max(0, 1 - Math.abs(x) / 300);
            
            if (particle.style.opacity > 0) {
                requestAnimationFrame(animate);
            } else {
                particle.remove();
            }
        };
        animate();
    }
}"
    }
  ]
}
